name: deerear_cd
on:
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: ${{secrets.DB_NAME}}
          POSTGRES_USER: ${{secrets.SPRING_DATASOURCE_USERNAME}}
          POSTGRES_PASSWORD: ${{secrets.SPRING_DATASOURCE_PASSWORD}}
        ports:
          - 5432:5432
    steps:

    - name : Install psql
      run: |
        sudo apt-get update
        sudo apt-get install --yes --no-install-recommends postgresql-client

    - name: Init DB
      run: |
        PGPASSWORD=${{secrets.SPRING_DATASOURCE_PASSWORD}} psql -U ${{secrets.SPRING_DATASOURCE_USERNAME}} -h localhost -p 5432 -d ${{secrets.DB_NAME}} <<EOF ${{secrets.DB_SQL}} EOF

    - uses: actions/checkout@v4

    - name: Create env
      run: |
        echo "SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }}" >> .env
        echo "SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}" >> .env
        echo "SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}" >> .env

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - uses: gradle/actions/setup-gradle@v4
      with:
        gradle-version: 8.8
        cache-encryption-key: ${{ secrets.GradleEncryptionKey }}

    - name: Build application
      env:
        JWT_SECRET_KEY: ${{secrets.JWT_SECRET_KEY}}
        SPRING_DATASOURCE_URL: ${{secrets.SPRING_DATASOURCE_URL}}
        SPRING_DATASOURCE_USERNAME: ${{secrets.SPRING_DATASOURCE_USERNAME}}
        SPRING_DATASOURCE_PASSWORD: ${{secrets.SPRING_DATASOURCE_PASSWORD}}
      run: |
        chmod +x ./gradlew
        ./gradlew build

    - name: Docker hub login
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Docker image build
      run: |
        docker build -t ${{secrets.DOCKERHUB_USERNAME}}/deerear .

    - name: Docker Hub push
      run: docker push ${{secrets.DOCKERHUB_USERNAME}}/deerear

    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        timeout: '30s'
        script: |
          bash ${{secrets.DEPLOY_SCRIPT}}