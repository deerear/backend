name: deerear_ci
on:
  pull_request:
    branches: ["develop"]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: ${{secrets.DB_NAME}}
          POSTGRES_USER: ${{secrets.SPRING_DATASOURCE_USERNAME}}
          POSTGRES_PASSWORD: ${{secrets.SPRING_DATASOURCE_PASSWORD}}
        ports:
          - 5432:5432
    steps:

    - name : Install psql
      run: |
        sudo apt-get update
        sudo apt-get install --yes --no-install-recommends postgresql-client

    - name: Init DB
      run: |
        psql -h localhost -p 5432 -d ${{secrets.DB_NAME}} -W ${{secrets.SPRING_DATASOURCE_PASSWORD}} -c ${{secrets.DB_SQL}}

    - uses: actions/checkout@v4

    - name: Create env
      run: |
        echo "SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }}" >> .env
        echo "SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}" >> .env
        echo "SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}" >> .env

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - uses: gradle/actions/setup-gradle@v4
      with:
        gradle-version: 8.8
        cache-encryption-key: ${{ secrets.GradleEncryptionKey }}

    - name: Build application
      env:
        JWT_SECRET_KEY: ${{secrets.JWT_SECRET_KEY}}
        SPRING_DATASOURCE_URL: ${{secrets.SPRING_DATASOURCE_URL}}
        SPRING_DATASOURCE_USERNAME: ${{secrets.SPRING_DATASOURCE_USERNAME}}
        SPRING_DATASOURCE_PASSWORD: ${{secrets.SPRING_DATASOURCE_PASSWORD}}
      run: |
        chmod +x ./gradlew
        ./gradlew clean
        ./gradlew --info build --configuration-cache
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Package
        path: build/libs

